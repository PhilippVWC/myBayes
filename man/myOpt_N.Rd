% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/myOpt_N.R
\name{myOpt_N}
\alias{myOpt_N}
\title{Optimize in multiple dimensions}
\usage{
myOpt_N(candidates, fn, lower, upper, gr = NULL, maxit = 200,
  statusMessages = FALSE)
}
\arguments{
\item{candidates}{data frame - With one set of parameters (par) for each row.}

\item{fn}{function of par - The function that is to be minimized.}

\item{lower}{Vector of type double - Lower bounds. The variable lower has the same dimension as par (Number of columns of candidates).}

\item{upper}{Vector of type double - Upper bounds. The variable upper has the same dimension as par (Number of columns of candidates).}

\item{gr}{A function to return the gradient for BFGS. If set to NULL, finite difference approximations
of the gradient are used instead (see documentation of package "optim")}

\item{maxit}{Maximum amount of iterations for BFGS, RVmmin and general simmulated Annealing.}

\item{statusMessage}{Boolean - Set to TRUE for more verbose output (default to FALSE).}
}
\value{
data frame - One column for every successfully performed optimization algorithm. Every row corresponds to an optimized parameter. Last row corresponds
to the function value of the resulting optimized parameters.
}
\description{
This optimization routine performs minimum search in more than two dimensions. Variuous optimization algorithms
such as (generalized) simmulated annealing, BFGS (Broyden-Fletcher-Goldfarb-Shanno), Rvmmin, (hjkb) Hook-Jeeves and Nelder-Mead are subsequently performed.
}
\details{
This function performs adequate error handling. In problematic cases, where optimization fails, the program is not interrupted but may
return an empty data frame. Many optimization algorithms perform their tasks, but only those, which do successfully contribute to a column entry in
the resulting data frame.
}
\examples{
install.packages(c("GenSA","dfoptim"))
fn = function(x) x[1]^2+x[2]^2
candidates = data.frame("x" = c(1,-30),
                        "y" = c(-5,10))
lower = c(-100,-100)
upper = c(100,100)

res = myOpt_N(candidates = candidates,
              fn = fn,
              lower = lower,
              upper = upper,
              maxit = 200,
              statusMessages = TRUE)
print(res)# Columns are sorted in increasing order
}
\author{
Philipp van Wickevoort Crommelin
}
