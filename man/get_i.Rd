% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{get_i}
\alias{get_i}
\title{Get index position on discrete grid}
\usage{
get_i(x, domain, N_discr)
}
\arguments{
\item{domain}{Vector of type double - Vector with two components containing
the bounds of the discretized interval}

\item{N_discr}{integer - discretization of the interval bounded by domain}

\item{X}{Double - Continuous value, to be identified on specified grid.}
}
\value{
Integer - The index position on the specified grid belonging to the continuous value x or -1
if input values are not adequate
}
\description{
This function provides the corresponding index position on the specified grid.
}
\details{
This routine is implemented in C++. Note that a (continuous) value
between two grid
points condenses two its right grid point
}
\examples{
// C++ C++ DEFINITION
double get_i(double x, Rcpp::NumericVector domain, int N_discr){
  if(N_discr>1.0 & domain[1]>domain[0] & x<=domain[1] & x>=domain[0]){
    double dx = (domain[1]-domain[0])/(N_discr-1.0);
    double minDiff = domain[1]-domain[0];
    int i = 0;
    double diff = abs(i*dx-x);
    while(diff <= minDiff){
      minDiff = diff;
      diff = abs(++i*dx - x);
    }
    return(i);
  }else{
    return(-1);
    std::printf("Input parameters not adequately chosen. See help(get_i) for more information");
  }
}

/*** R
#R code example

N_discr = 10 # Discretization of grid
lower = 0
upper = 1
domain = c(lower,upper)
dx = (domain[2]-domain[1])/(N_discr-1)
X = seq(0,1,dx) # grid (for comparism)
X2 = seq(0,1,dx/2) # test values to be indexed, note: step size is dx/2
(df = data.frame(TestValues = X2, CorrespondingIndexPositionsOnGrid = sapply(X2,function(x) get_i(x,domain,N_discr))))
*/
}
\references{
S. Sprott, Chaos and Time-series analysis
}
\author{
P.v.W. Crommelin
}
